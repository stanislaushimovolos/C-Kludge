call 1
end
: 0
push ax
push 0
add
pop cx
push [cx]
push 0
jne 5
push ax
push 1
add
pop cx
push [cx]
push 0
jne 7
push ax
push 2
add
pop cx
push [cx]
push 0
jne 9
: 11
push ax
push 2
add
pop cx
push [cx]
push 3
jbe 10
push 66
out
push ax
push 2
add
pop cx
push [cx]
push 1
add 
push ax
push 2
add
pop  cx
pop  [cx]
jmp 11
: 10
jmp 8
: 9
: 8
jmp 6
: 7
push -1
push ax
push 2
add
pop cx
push [cx]
mul 
push ax
push 1
add
pop cx
push [cx]
div 
out
: 6
jmp 4
: 5
push ax
push 1
add
pop cx
push [cx]
push ax
push 1
add
pop cx
push [cx]
mul 
push 4
push ax
push 0
add
pop cx
push [cx]
mul 
push ax
push 2
add
pop cx
push [cx]
mul 
sub 
push ax
push 3
add
pop  cx
pop  [cx]
push ax
push 3
add
pop cx
push [cx]
push 0
jne 13
push -1
push ax
push 1
add
pop cx
push [cx]
mul 
push 2
push ax
push 0
add
pop cx
push [cx]
mul 
div 
out
jmp 12
: 13
push ax
push 3
add
pop cx
push [cx]
push 0
jle 15
push -1
push ax
push 1
add
pop cx
push [cx]
mul 
push ax
push 3
add
pop cx
push [cx]
sqrt
add 
push 2
push ax
push 0
add
pop cx
push [cx]
mul 
div 
out
push -1
push ax
push 1
add
pop cx
push [cx]
mul 
push ax
push 3
add
pop cx
push [cx]
sqrt
sub 
push 2
push ax
push 0
add
pop cx
push [cx]
mul 
div 
out
jmp 14
: 15
: 14
: 12
: 4
ret

: 1
in
push ax
push 0
add
pop  cx
pop  [cx]
in
push ax
push 1
add
pop  cx
pop  [cx]
in
push ax
push 2
add
pop  cx
pop  [cx]
push ax
push 0
add
pop cx
push [cx]
push 0
push 3
add
push ax
add
pop cx
pop [cx]
push ax
push 1
add
pop cx
push [cx]
push 1
push 3
add
push ax
add
pop cx
pop [cx]
push ax
push 2
add
pop cx
push [cx]
push 2
push 3
add
push ax
add
pop cx
pop [cx]
push ax
push 3
add
pop ax
call 0
push ax
push 3
sub
pop ax
ret

